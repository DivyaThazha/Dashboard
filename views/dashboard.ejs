<html lang="en-us">

<head>
    <title>SDN</title>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <!-- Mobile Metas -->
    <meta name="viewport" content="width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <!-- Site Metas -->
    <meta name="keywords" content="">
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Site Icons -->
    <link rel="apple-touch-icon" href="images/apple-touch-icon.png">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="./../stylesheets/fontawesome.css">
    <link rel="stylesheet" href="./../stylesheets/style.css">
    <link rel="stylesheet" href="./../stylesheets/dashboard.css">
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <link href="https://fonts.googleapis.com/css?family=Baloo+Bhai" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body>
<nav class="navbar navbar-inverse">
    <div class="container-fluid">
        <img style="height: 80px; width: 100px; float: left; margin-left: 50px; margin-right: 20px" src="/images/dashboard3.png"/>
        <div class="navbar-header">
            <a class="navbar-brand dashboardFont"  href="#" >Cluster Monitoring Dashboard</a>
        </div>
    </div>
</nav>

<section style="margin-top: 20px; min-height: 77%;">
    <div class="container">
        <h2></h2>
        <div class="row">
            <div class="col-md-6 ">
                <!--div id="graphs" ></div-->
                <div id="charts" ></div>
            </div>
            <div class="col-md-6 ">
                <div id="clusterContent">
                    <span class="closeWidget" onclick="closeWidgets()">X</span>
                    <div class="table-header widgetHeader">
                    </div>

                    <div class="table-belowheader">
                        <ul class="nav nav-tabs">
                            <li class="active"><a data-toggle="tab" href="#home"><i class="material-icons" style="font-size:25px">assessment</i></a></li>
                            <li><a data-toggle="tab" href="#menu1"><i class="material-icons" style="font-size:25px">chrome_reader_mode</i></a></li>
                            <li><a data-toggle="tab" href="#menu2"><i class="material-icons" style="font-size:25px">description</i></a></li>
                        </ul>
                    </div>
                    <div class="table-content">
                        <div class="tab-content">
                            <div id="home" class="tab-pane fade in active">

                                <div class="tabheading">Machine Learning Output</div>
                                <div class="tabulardata">
                                    <div class="tabulardata-header">
                                        <span class="tabulardata-content-col" style="width: 21%">SRC_IP</span>
                                        <span class="tabulardata-content-col" style="width: 14%">SRC_PORT</span>
                                        <span class="tabulardata-content-col" style="width: 21%">DEST_IP</span>
                                        <span class="tabulardata-content-col" style="width: 14%">DEST_PORT</span>
                                        <span class="tabulardata-content-col"  style="width: 11%">SERVICE</span>
                                        <span class="tabulardata-content-col"  style="width: 10%">OUTPUT</span>

                                    </div>
                                    <div class="tabulardata-content">

                                    </div>
                                </div>

                            </div>
                            <div id="menu1" class="tab-pane fade">

                                <div class="tabheading">Attacks monitoring</div>
                                <div class="tabulardata">
                                    <div class="tabulardata-header">
                                        <span class="tabulardata-content-col" style="width: 30%">SRC_IP</span>
                                        <span class="tabulardata-content-col" style="width: 30%">DEST_IP</span>
                                        <span class="tabulardata-content-col"  style="width: 30%">COUNT</span>

                                    </div>
                                    <div class="tabulardata-content">
                                    </div>
                                </div>

                            </div>
                            <div id="menu2" class="tab-pane fade">

                                <div class="tabheading">System Health</div>
                                <div class="tabulardata tabulardata-conditions" >
                                    <div class="tabulardata-content">
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col tabulardata-content-col_label"><span class="badge badge-success">STATUS</span></span>
                                            <span class="tabulardata-content-col tabulardata_Ready">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col tabulardata-content-col_label"><span class="badge badge-info">INFO</span></span>
                                            <span class="tabulardata-content-col tabulardata_networkAvailable">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col tabulardata-content-col_label"><span class="badge badge-info">INFO</span></span>
                                            <span class="tabulardata-content-col tabulardata_memoryPressure">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col tabulardata-content-col_label"><span class="badge badge-info">INFO</span></span>
                                            <span class="tabulardata-content-col tabulardata_diskPressure">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col tabulardata-content-col_label"><span class="badge badge-info">INFO</span></span>
                                            <span class="tabulardata-content-col tabulardata_PIDPressure">-</span>
                                        </div>

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div id="clusterContentOpenVSwitch">
                    <span class="closeWidget" onclick="closeWidgets()">X</span>
                    <div class="table-header widgetHeader">
                    </div>
                    <div class="table-belowheader">
                        <ul class="nav nav-tabs">
                            <li class="active"><a data-toggle="tab" href="#home"><i class="material-icons" style="font-size:25px">assessment</i></a></li>
                        </ul>
                    </div>
                    <div class="table-content">
                        <div class="tab-content">
                            <div id="openVHome" class="tab-pane fade in active">

                                <div class="tabheading">OpenVSwitch Statistics</div>
                                <div class="tabulardata tabulardata-conditions" >
                                    <div class="tabulardata-content">
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Port Number</span>
                                            <span class="tabulardata-content-col tabulardata_port_no">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Received Bytes</span>
                                            <span class="tabulardata-content-col tabulardata_rx_bytes">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Received Errors</span>
                                            <span class="tabulardata-content-col tabulardata_rx_errors">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Received Packets</span>
                                            <span class="tabulardata-content-col tabulardata_rx_packets">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Transmitted Bytes</span>
                                            <span class="tabulardata-content-col tabulardata_tx_bytes">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Transmitted Errors</span>
                                            <span class="tabulardata-content-col tabulardata_tx_errors">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Transmitted Packets</span>
                                            <span class="tabulardata-content-col tabulardata_tx_packets">-</span>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div id="clusterContentKubernetesSDN">
                    <span class="closeWidget" onclick="closeWidgets()">X</span>
                    <div class="table-header widgetHeader">
                    </div>

                    <div class="table-belowheader">
                        <ul class="nav nav-tabs">
                            <li class="active"><a data-toggle="tab" href="#SDN"><i class="material-icons" style="font-size:25px">assessment</i></a></li>
                            <li><a data-toggle="tab" href="#slave1"><i class="material-icons" style="font-size:25px">filter_1</i></a></li>
                            <li><a data-toggle="tab" href="#slave2"><i class="material-icons" style="font-size:25px">filter_2</i></a></li>
                            <li><a data-toggle="tab" href="#slave3"><i class="material-icons" style="font-size:25px">filter_3</i></a></li>
                        </ul>
                    </div>
                    <div class="table-content">
                        <div class="tab-content">
                            <div id="SDN" class="tab-pane fade in active">

                            </div>
                            <div id="slave1" class="tab-pane fade">
                                Slave1
                            </div>
                            <div id="slave2" class="tab-pane fade">
                                Slave2
                            </div>
                            <div id="slave3" class="tab-pane fade">
                               Slave3
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>

        <div class="row">
            <div class="col-md-12 ">
                <div class="panel-group" id="accordion">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">
                                    Overview</a>
                            </h4>
                        </div>
                        <div id="collapse1" class="panel-collapse collapse in">
                            <div class="panel-body">
                                <div class="tabulardata">
                                    <div class="tabulardata-header">
                                    </div>
                                    <div class="tabulardata-content">
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Name</span>
                                            <span class="tabulardata-content-col tabulardata_ID">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">IP Address</span>
                                            <span class="tabulardata-content-col tabulardata_IP">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Creation Time</span>
                                            <span class="tabulardata-content-col tabulardata_creation_timestamp">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Architecture</span>
                                            <span class="tabulardata-content-col tabulardata_Architecture">-</span>
                                        </div>

                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Machine ID</span>
                                            <span class="tabulardata-content-col tabulardata_machineID">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Memory Usage</span>
                                            <span class="tabulardata-content-col tabulardata_memoryUsage">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Kernel Version</span>
                                            <span class="tabulardata-content-col tabulardata_kernel_version">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">Operating System</span>
                                            <span class="tabulardata-content-col tabulardata_operating_system">-</span>
                                        </div>
                                        <div class="tabulardata-row">
                                            <span class="tabulardata-content-col">OS Image</span>
                                            <span class="tabulardata-content-col tabulardata_os_image">-</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">
                                    Workload Statuses</a>
                            </h4>
                        </div>
                        <div id="collapse2" class="panel-collapse collapse">
                            <div class="panel-body">Lorem ipsum dolor sit amet, consectetur adipisicing elit,
                                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
                                minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
                                commodo consequat.</div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapse3">
                                    Nodes</a>
                            </h4>
                        </div>
                        <div id="collapse3" class="panel-collapse collapse">
                            <div class="panel-body">Lorem ipsum dolor sit amet, consectetur adipisicing elit,
                                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
                                minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
                                commodo consequat.</div>
                        </div>
                    </div-->
                </div>
            </div>
        </div>

        <div id="real_time_chart_slave01_cpu" class="dashboard-flot-chart"></div>

    </div>
</section>

<a href="#" id="scroll-to-top" class="dmtop global-radius"><i class="fa fa-angle-up"></i></a>
<script>
    var myCluster = document.getElementById("clusterContent");
    myCluster.style.display = "none";

    var clusterContentOpenVSwitch = document.getElementById("clusterContentOpenVSwitch");
    clusterContentOpenVSwitch.style.display = "none";

    var clusterContentKubernetesSDN = document.getElementById("clusterContentKubernetesSDN");
    clusterContentKubernetesSDN.style.display = "none";

    var div = d3.select("body").append("div")
        .attr("class","tooltip")
        .style("display", "none");
    var w = 750;
    var h = 600;
    var linkDistance=400;

    var margin = {top: 50, right: 100, bottom: 20, left: 100},
        width = 800 - margin.right - margin.left,
        height = 500 - margin.top - margin.bottom;
    var i = 0;
    var tree = d3.layout.tree()
        .size([height, width]);

    var diagonal = d3.svg.diagonal()
        .projection(function(d) { return [d.x, d.y]; });

    var svg1 = d3.select("#charts").append("svg")
        .attr("width", width + margin.right + margin.left)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    function sendRequest1()
    {
        console.log("Sending request")
        $.ajax({
            url: 'http://130.65.159.69:7000/kube-api/graph',
            responseType: 'application/json',
            type: 'get',
            cache: true,
            success: function(resp){
                console.log(resp);  
                svg1.selectAll("*").remove();
                data = resp.graph.nodes;
                console.log(data);

                // create a name: node map
                var dataMap = data.reduce(function(map, node) {
                    map[node.id] = node;
                    return map;
                }, {});

                // create the tree array
                var treeData = [];
                data.forEach(function(node) {
                    // add to parent
                    var parent = dataMap[node.parent];
                    if (parent) {
                        // create child array if it doesn't exist
                        (parent.children || (parent.children = []))
                        // add node to child array
                            .push(node);
                    } else {
                        // parent is null or missing
                        treeData.push(node);
                    }
                });

                root = treeData[0];
                root.x0 = height;
                root.y0 = 0;

                update(root);

                d3.select(self.frameElement).style("height", "500px");
                function update(source) {

                    // Compute the new tree layout.
                    var nodes = tree.nodes(root).reverse(),
                        links = tree.links(nodes);

                    // Normalize for fixed-depth.
                    nodes.forEach(function(d) { d.y = d.depth * 180; });

                    // Update the nodes…
                    var node = svg1.selectAll("g.node")
                        .data(nodes, function(d) { return d.id || (d.id = ++i); });

                    // Enter any new nodes at the parent's previous position.
                    var nodeEnter = node.enter().append("g")
                        .attr("class", "node")
                        .attr("transform", function(d) {
                            return "translate(" + d.x + "," + d.y + ")"; });
                    //.on("click", click);

                    nodeEnter.append("image").attr('width', 80).attr('height', 80).attr('xlink:href',function(d){
                        var src = d.id == "kubernetes-sdn-master"? "images/cloud.png": d.id=="OpenVSwitch"? "images/router.png":'images/raspberry-pi.png'
                        return src
                    })
                        .attr("y", -50)
                        .attr("dy", ".5em")
                        .attr("x", function(d) {
                            return -39})
                        .on("mouseenter", function(d){
                            //code for status: Red/Green
                            d3.select(this).attr('xlink:href',function(d){
                                var src = d.id == "kubernetes-sdn-master"? "images/cloudH.png": d.id=="OpenVSwitch"? "images/routerH.png":'images/raspberry-piH.png'
                                return src
                            });
                            var status;
                            if(d.status == "True")
                                status =  "clusterStatus";
                            else
                                status =  "clusterStatusInactive";
                            //code for Sentence case name
                            var name;
                            if(d.id == "OpenVSwitch" || d.id == "kubernetes-sdn-master")
                                name = d.id;
                            else
                                name = d.id.charAt(0).toUpperCase() + d.id.substring(1,d.id.length-2) +" "+d.id.charAt(d.id.length-1) + d.id.charAt(d.id.length);

                            div.transition()
                                .duration(200)
                                .style("display", "inline-block")
                                .style("opacity", 10);
                            div.html(
                                "<div class='"+status+"'>"+ "</div>" + "<div class='rightTooltipContent' >"+
                                "<div class='tooltipHeader'>" + name + "</div>" +
                                "<div class='tooltipHeaderIP'>"   + d.IP   + "</div>" +
                                "</div>"
                            )
                            div.style("left",(d.x + 220) + "px")
                                .style("top",(d.y + 110) + "px");

                        })
                        .on("mouseleave",function(d){
                            div.style("display", "none")
                                .style("opacity", 0);
                            d3.select(this).attr('xlink:href',function(d){
                                var src = d.id == "kubernetes-sdn-master"? "images/cloud.png": d.id=="OpenVSwitch"? "images/router.png":'images/raspberry-pi.png'
                                return src
                            });
                        })
                        .on("click", function (d){
                            myCluster.style.display = "none";
                            clusterContentOpenVSwitch.style.display = "none";
                            clusterContentKubernetesSDN.style.display = "none";
                            fill_widget_conditions(d);
                            fill_advanced_details_overview(d);
                            if(d.id == "kubernetes-sdn-master"){
                                fetch_kubernetes_SDN_pods();
                                document.querySelector("#clusterContentKubernetesSDN .widgetHeader").innerText = "Kubernetes SDN Master";
                                clusterContentKubernetesSDN.style.display = "block";
                            }
                            else if(d.id == "OpenVSwitch"){
                                document.querySelector("#clusterContentOpenVSwitch .widgetHeader").innerText = "OpenVSwitch";
                                clusterContentOpenVSwitch.style.display = "block";
                            }else{
                                myCluster.style.display = "block";
                            }
                        })
                        .style("cursor","pointer");


                    // Declare the links…
                    var link = svg1.selectAll("path.link")
                        .data(links, function(d) { return d.target.id; });

                    // Enter the links.
                    link.enter().insert("path", "g")
                        .attr("class", "link")
                        .attr("d", diagonal);

                }
            }

        });
    }
    sendRequest1();

    function fetch_continuos_output_data(input) {
        console.log(input.id);

        $.ajax({
            url: 'http://130.65.159.69:7000/fetch_output_data',
            dataType: 'json',
            data: {
                node: input.id
            },
            type: 'get',
            cache: true,
            crossDomain: true,
            success: function (resp) {
                //console.log(resp);
                fill_widget_continuous_output(resp.output);
                fill_widget_continuous_attack(resp.attack);
                fill_widget_openVSwitch(resp.openv_result);
            },
            error : function(request,error)
            {
                console.log("ERROR Request: "+JSON.stringify(request));
            }
        });
    }

    function fill_advanced_details_overview(d){
        console.log(d);
        document.getElementsByClassName("tabulardata_ID")[0].innerText = d.id;
        document.getElementsByClassName("tabulardata_IP")[0].innerText = d.IP;
        document.getElementsByClassName("tabulardata_Architecture")[0].innerText = d.architecture;
        document.getElementsByClassName("tabulardata_creation_timestamp")[0].innerText = d.creation_timestamp;
        document.getElementsByClassName("tabulardata_kernel_version")[0].innerText = d.kernel_version;
        document.getElementsByClassName("tabulardata_machineID")[0].innerText = d.machineID;
        document.getElementsByClassName("tabulardata_memoryUsage")[0].innerText = d.memoryUsage;
        document.getElementsByClassName("tabulardata_operating_system")[0].innerText = d.operating_system;
        document.getElementsByClassName("tabulardata_os_image")[0].innerText = d.os_image;
    }

    function fill_widget_conditions(d) {

        fetch_continuos_output_data(d);
        if(d.condition_Ready == "True")
            document.getElementsByClassName("tabulardata_Ready")[0].innerHTML = '<div class="metricsC"><i class="material-icons" style="color:green; font-size:25px; padding-top: 5px">check_circle</i><span class="metricsText">System is up and running</span></div>';
        else
            document.getElementsByClassName("tabulardata_Ready")[0].innerHTML = '<div><i class="material-icons" style="font-size:25px">error</i>System is down</div>';


        if(d.condition_NetworkUnavailable == "False")
            document.getElementsByClassName("tabulardata_networkAvailable")[0].innerHTML = '<div class="metricsC"><i class="material-icons" style="color:green; font-size:25px; padding-top: 5px">check_circle</i><span class="metricsText">Network is available</span></div>';
        else
            document.getElementsByClassName("tabulardata_networkAvailable")[0].innerHTML = '<div><i class="material-icons" style="font-size:25px">error</i>Network is not available</div>';

        if(d.condition_MemoryPressure == "False")
            document.getElementsByClassName("tabulardata_memoryPressure")[0].innerHTML = '<div class="metricsC"><i class="material-icons" style="color:green; font-size:25px; padding-top: 5px">check_circle</i><span class="metricsText">Memory pressure is normal</span></div>';
        else
            document.getElementsByClassName("tabulardata_memoryPressure")[0].innerHTML = '<div><i class="material-icons" style="font-size:25px">error</i>Memory pressure is not normal</div>';

        if(d.condition_DiskPressure == "False")
            document.getElementsByClassName("tabulardata_diskPressure")[0].innerHTML = '<div class="metricsC"><i class="material-icons" style="color:green; font-size:25px; padding-top: 5px">check_circle</i><span class="metricsText">Disk pressure is normal</span></div>';
        else
            document.getElementsByClassName("tabulardata_diskPressure")[0].innerHTML = '<div><i class="material-icons" style="font-size:25px">error</i>Disk pressure is not normal</div>';

        if(d.condition_PIDPressure == "False")
            document.getElementsByClassName("tabulardata_PIDPressure")[0].innerHTML = '<div class="metricsC"><i class="material-icons" style="color:green; font-size:25px; padding-top: 5px">check_circle</i><span class="metricsText">PID pressure is normal</span></div>';
        else
            document.getElementsByClassName("tabulardata_PIDPressure")[0].innerHTML = '<div><i class="material-icons" style="font-size:25px">error</i>PID pressure is not normal</div>';


        var name;
        if( d.id == "kubernetes-sdn-master")
            name = d.id;
        else
            name = d.id.substring(0,d.id.length-2).toUpperCase() +" "+d.id.charAt(d.id.length-1) + d.id.charAt(d.id.length);

        document.getElementsByClassName("widgetHeader")[0].innerText = name;

    }

    function fill_widget_continuous_output(d) {

        var rows = "";
        for (var j = 0; j < d.length && j < 100; j++) {
            rows += '<div class="tabulardata-row">'
            rows += '<span class="tabulardata-content-col tabulardata_src_ip">' +d[j]['src_ip'] + '</span>'
            rows += '<span class="tabulardata-content-col tabulardata_src_port">' +d[j]['src_port'] + '</span>'
            rows += '<span class="tabulardata-content-col tabulardata_dst_ip">' +d[j]['dst_ip'] + '</span>'
            rows += '<span class="tabulardata-content-col tabulardata_dst_port">' +d[j]['dst_port'] + '</span>'
            rows += '<span class="tabulardata-content-col tabulardata_service">' +d[j]['service'] + '</span>'
            rows += '<span class="tabulardata-content-col tabulardata_output">' +d[j]['result'][0] + '</span>'
            rows += '</div>'
        }
        $("#home .tabulardata-content").html(
            '<div class="tabulardata-row">' + rows +  ' </div>'
        );
    }

    function fill_widget_continuous_attack(d) {
        var rows = "";
        for (var j = 0; j < d.length && j < 50; j++) {
            var src = d[j]['id'].substring(0, d[j]['id'].indexOf('-')) ;
            var dest = d[j]['id'].substring(d[j]['id'].indexOf('-') + 1, d[j]['id'].length) ;;
            rows += '<div class="tabulardata-row">'
            rows += '<span class="tabulardata-content-col tabulardata_src_ip">' + src + '</span>'
            rows += '<span class="tabulardata-content-col tabulardata_dst_ip">' + dest + '</span>'
            rows += '<span class="tabulardata-content-col tabulardata_dst_port">' +d[j]['count'] + '</span>'
            rows += '</div>'
        }
        $("#menu1 .tabulardata-content").html(
            '<div class="tabulardata-row">' + rows +  ' </div>'
        );
    }

    function fill_widget_openVSwitch(d) {
        d = d[0];
        console.log(d);
        document.getElementsByClassName("tabulardata_port_no")[0].innerText = d.port_no;
        document.getElementsByClassName("tabulardata_rx_bytes")[0].innerText = d.rx_bytes;
        document.getElementsByClassName("tabulardata_rx_errors")[0].innerText = d.rx_errors;
        document.getElementsByClassName("tabulardata_rx_packets")[0].innerText = d.rx_packets;
        document.getElementsByClassName("tabulardata_tx_bytes")[0].innerText = d.tx_bytes;
        document.getElementsByClassName("tabulardata_tx_errors")[0].innerText = d.tx_errors;
        document.getElementsByClassName("tabulardata_tx_packets")[0].innerText = d.tx_packets;
    }

    function fetch_kubernetes_SDN_pods(){
        $.ajax({
            url: 'http://130.65.159.69:7000/kube-api/pods',
            dataType: 'json',
            type: 'get',
            cache: true,
            crossDomain: true,
            success: function (resp) {
                fill_widget_kubernetes_SDN(resp.pods);
            },
            error : function(request,error)
            {
                console.log("ERROR Request: "+JSON.stringify(request));
            }
        });
    }
    
    function fill_widget_kubernetes_SDN(pods) {
        var sdn_rows = "";
        var slave1_rows = "";
        var slave2_rows = "";
        var slave3_rows = "";
        for(var i=0; i<pods.length; i++){
            if(pods[i].node == "kubernetes-sdn-master"){
                if(pods[i].terminated == null)
                    sdn_rows += '<div class="tabulardata-header"><i class="material-icons" style="color:green; font-size:25px; padding-top: 5px">check_circle</i><span class="tabulardata_text">'+ pods[i].container_name +'</span></div>';
                else
                    sdn_rows += '<div class="tabulardata-header"><i class="material-icons" style="color:#cf2323; font-size:25px; padding-top: 5px">error</i><span class="tabulardata_text">'+ pods[i].container_name +'</span></div>';
                sdn_rows += '<div class="tabulardata-content">';
                sdn_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Pod IP</span>';
                sdn_rows += '<span class="tabulardata-content-col tabulardata_pod_ip">'+ pods[i].pod_ip +'</span>  </div>';
                sdn_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Protocol</span>';
                sdn_rows += '<span class="tabulardata-content-col tabulardata_protocol">'+ pods[i].protocol +'</span>  </div>';
                sdn_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Start time</span>';
                sdn_rows += '<span class="tabulardata-content-col tabulardata_start_time">'+ pods[i].start_time +'</span>  </div>';
                sdn_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Container port</span>';
                sdn_rows += '<span class="tabulardata-content-col tabulardata_container_port">'+ pods[i].container_port +'</span>  </div>';
                sdn_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Namespace</span>';
                sdn_rows += '<span class="tabulardata-content-col tabulardata_namespace">'+ pods[i].namespace +'</span>  </div>';
                sdn_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Status</span>';
                if(pods[i].terminated == null)
                    sdn_rows += '<span class="tabulardata-content-col tabulardata_status">Running</span>  </div>';
                else
                    sdn_rows += '<span class="tabulardata-content-col tabulardata_status">Terminated</span>  </div>';
                sdn_rows += '</div>';
            }
            else if(pods[i].node == "slave01"){
                if(pods[i].terminated == null)
                    slave1_rows += '<div class="tabulardata-header"><i class="material-icons" style="color:green; font-size:25px; padding-top: 5px">check_circle</i><span class="tabulardata_text">'+ pods[i].container_name +'</span></div>';
                else
                    slave1_rows += '<div class="tabulardata-header"><i class="material-icons" style="color:#cf2323; font-size:25px; padding-top: 5px">error</i><span class="tabulardata_text">'+ pods[i].container_name +'</span></div>';
                slave1_rows += '<div class="tabulardata-content">';
                slave1_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Pod IP</span>';
                slave1_rows += '<span class="tabulardata-content-col tabulardata_pod_ip">'+ pods[i].pod_ip +'</span>  </div>';
                slave1_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Protocol</span>';
                slave1_rows += '<span class="tabulardata-content-col tabulardata_protocol">'+ pods[i].protocol +'</span>  </div>';
                slave1_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Start time</span>';
                slave1_rows += '<span class="tabulardata-content-col tabulardata_start_time">'+ pods[i].start_time +'</span>  </div>';
                slave1_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Container port</span>';
                slave1_rows += '<span class="tabulardata-content-col tabulardata_container_port">'+ pods[i].container_port +'</span>  </div>';
                slave1_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Namespace</span>';
                slave1_rows += '<span class="tabulardata-content-col tabulardata_namespace">'+ pods[i].namespace +'</span>  </div>';
                slave1_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Status</span>';
                if(pods[i].terminated == null)
                    slave1_rows += '<span class="tabulardata-content-col tabulardata_status">Running</span>  </div>';
                else
                    slave1_rows += '<span class="tabulardata-content-col tabulardata_status">Terminated</span>  </div>';
                slave1_rows += '</div>';
            }
            else if(pods[i].node == "slave02"){
                if(pods[i].terminated == null)
                    slave2_rows += '<div class="tabulardata-header"><i class="material-icons" style="color:green; font-size:25px; padding-top: 5px">check_circle</i><span class="tabulardata_text">'+ pods[i].container_name +'</span></div>';
                else
                    slave2_rows += '<div class="tabulardata-header"><i class="material-icons" style="color:#cf2323; font-size:25px; padding-top: 5px">error</i><span class="tabulardata_text">'+ pods[i].container_name +'</span></div>';
                slave2_rows += '<div class="tabulardata-content">';
                slave2_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Pod IP</span>';
                slave2_rows += '<span class="tabulardata-content-col tabulardata_pod_ip">'+ pods[i].pod_ip +'</span>  </div>';
                slave2_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Protocol</span>';
                slave2_rows += '<span class="tabulardata-content-col tabulardata_protocol">'+ pods[i].protocol +'</span>  </div>';
                slave2_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Start time</span>';
                slave2_rows += '<span class="tabulardata-content-col tabulardata_start_time">'+ pods[i].start_time +'</span>  </div>';
                slave2_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Container port</span>';
                slave2_rows += '<span class="tabulardata-content-col tabulardata_container_port">'+ pods[i].container_port +'</span>  </div>';
                slave2_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Namespace</span>';
                slave2_rows += '<span class="tabulardata-content-col tabulardata_namespace">'+ pods[i].namespace +'</span>  </div>';
                slave2_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Status</span>';
                if(pods[i].terminated == null)
                    slave2_rows += '<span class="tabulardata-content-col tabulardata_status">Running</span>  </div>';
                else
                    slave2_rows += '<span class="tabulardata-content-col tabulardata_status">Terminated</span>  </div>';
                slave2_rows += '</div>';
            }
            else if(pods[i].node == "slave03"){
                if(pods[i].terminated == null)
                    slave3_rows += '<div class="tabulardata-header"><i class="material-icons" style="color:green; font-size:25px; padding-top: 5px">check_circle</i><span class="tabulardata_text">'+ pods[i].container_name +'</span></div>';
                else
                    slave3_rows += '<div class="tabulardata-header"><i class="material-icons" style="color:#cf2323; font-size:25px; padding-top: 5px">error</i><span class="tabulardata_text">'+ pods[i].container_name +'</span></div>';

                slave3_rows += '<div class="tabulardata-content">';
                slave3_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Pod IP</span>';
                slave3_rows += '<span class="tabulardata-content-col tabulardata_pod_ip">'+ pods[i].pod_ip +'</span>  </div>';
                slave3_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Protocol</span>';
                slave3_rows += '<span class="tabulardata-content-col tabulardata_protocol">'+ pods[i].protocol +'</span>  </div>';
                slave3_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Start time</span>';
                slave3_rows += '<span class="tabulardata-content-col tabulardata_start_time">'+ pods[i].start_time +'</span>  </div>';
                slave3_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Container port</span>';
                slave3_rows += '<span class="tabulardata-content-col tabulardata_container_port">'+ pods[i].container_port +'</span>  </div>';
                slave3_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Namespace</span>';
                slave3_rows += '<span class="tabulardata-content-col tabulardata_namespace">'+ pods[i].namespace +'</span>  </div>';
                slave3_rows += '<div class="tabulardata-row"> <span class="tabulardata-content-col">Status</span>';
                if(pods[i].terminated == null)
                    slave3_rows += '<span class="tabulardata-content-col tabulardata_status">Running</span>  </div>';
                else
                    slave3_rows += '<span class="tabulardata-content-col tabulardata_status">Terminated</span>  </div>';
                slave3_rows += '</div>';
            }
        }

        $("#SDN").html(
            '<div class="tabulardataSDN"><div class="tabheading">Kubernetes Master Pod Info </div>' + sdn_rows +  ' </div>'
        );

        $("#slave1").html(
            '<div class="tabulardataSDN"><div class="tabheading">Slave 01 Pod Info </div>' + slave1_rows +  ' </div>'
        );

        $("#slave2").html(
            '<div class="tabulardataSDN"><div class="tabheading">Slave 02 Pod Info </div>' + slave2_rows +  ' </div>'
        );

        $("#slave3").html(
            '<div class="tabulardataSDN"><div class="tabheading">Slave 03 Pod Info </div>' + slave3_rows +  ' </div>'
        );
    }

    function closeWidgets() {
        myCluster.style.display = "none";
        clusterContentOpenVSwitch.style.display = "none";
        clusterContentKubernetesSDN.style.display = "none";
    }

    buildGraph("slave01","cpu")
    buildGraph("slave01","memory")
    buildGraph("slave02","cpu")
    buildGraph("slave02","memory")
    buildGraph("slave03","cpu")
    buildGraph("slave03","memory")
    buildGraph("kubernetes-sdn-master","cpu")
    buildGraph("kubernetes-sdn-master","memory")

    function buildGraph(node,type) {
        //Real time ==========================================================================================
        var plot = $.plot('#real_time_chart'+'_'+node+'_'+type, [getValues(node,type)], {
            series: {
                shadowSize: 0,
                color: 'rgb(0, 188, 212)'
            },
            grid: {
                borderColor: '#f3f3f3',
                borderWidth: 1,
                tickColor: '#f3f3f3'
            },
            lines: {
                fill: true
            },
            yaxis: {
                min: 0,
                max: 100
            },
            xaxis: {
                min: 0,
                max: 100
            }
        });

    }

    var usageData = {
        'slave01' : {
            'memory' : [],
            'cpu' : []
        },
        'slave02' : {
            'memory' : [],
            'cpu' : []
        },
        'slave03' : {
            'memory' : [],
            'cpu' : []
        },
        'kubernetes-sdn-master' : {
            'memory' : [],
            'cpu' : []
        }
    }

    function getValues(node,type)
    {
        return usageData[node][type]
    }
    function updateCpuUsage(){
        // $.ajax({
        //   url: 'http://localhost:5000/kube-api/graph',
        //   dataType: 'json',
        //   type: 'get',
        //   success: function(resp){

        resp = { metrics:[
            {'node':'slave01','cpu':'20','memory':'50'}
            ,
            {'node':'slave02','cpu':'20','memory':'50'}
            ,
            {'node':'slave03','cpu':'20','memory':'50'},

            {'node':'kubernetes-sdn-master','cpu':'20','memory':'50'}]}

        metrics = resp.metrics;
        for(i=0;i<metrics.length;i++)
        {
            var key = metrics[i]['node']
            if(key in usageData)
            {
                usageData[key]['memory'].push([usageData[key]['memory'].length,Number(metrics[i]['memory'])])
                usageData[key]['cpu'].push([usageData[key]['cpu'].length,Number(metrics[i]['cpu'])])

                if(usageData[key]['memory'].length>100)
                    usageData[key]['memory'].shift()
                if(usageData[key]['cpu'].length>100)
                    usageData[key]['cpu'].shift()
            }
        }
        console.log(usageData)
        // }
        // })
    }

    setInterval('sendRequest1()', 100000);

</script>
</body>
</html>
